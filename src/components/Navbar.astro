---
import clsx from "clsx";

interface NavbarData {
  name: string;
  link: string;
}

const currentPage: string = "/" + Astro.url.pathname.replaceAll("/", "");

const navbarData: NavbarData[] = [
  { name: "Inicio", link: "/" },
  { name: "Servicios", link: "/servicios" },
  { name: "Historia", link: "/historia" },
  { name: "Fundadores", link: "/fundadores" },
  { name: "Certificaciones", link: "/certificaciones" },
  { name: "Contacto", link: "/contacto" },
];
---

<header
  class="px-9 py-3 shadow-sm sticky top-0 z-50 bg-white backdrop-blur-lg transition-shadow duration-300 font-open-sans"
>
  <nav class="flex items-center justify-between max-w-screen-2xl mx-auto">
    <a
      href="/"
      class="flex gap-4 items-center transition-transform duration-300 hover:scale-[1.03]"
    >
      <img
        src="/logo-secundario.png"
        class="h-18 w-17"
        alt="El Dorado Air Cargo Logo"
      />
      <p
        class="text-gray-dark text-lg font-bold tracking-widest uppercase max-lg:text-sm"
      >
        El Dorado Air Cargo S.A.S
      </p>
    </a>

    <!-- Mobile Menu Toggle -->
    <button
      id="hamburger-button"
      class="lg:hidden p-3 rounded-md transition-transform hover:scale-110"
      aria-label="Open menu"
      aria-expanded="false"
    >
      <img src="/burger-menu-icon.svg" class="h-8 w-8" alt="Open menu" />
    </button>

    <button
      id="close-button"
      class="lg:hidden p-3 rounded-md hidden transition-transform hover:scale-110"
      aria-label="Close menu"
    >
      <img src="/close-menu-icon.svg" class="h-8 w-8" alt="Close menu" />
    </button>

    <!-- Desktop Navigation -->
    <ul class="hidden lg:flex gap-10">
      {
        navbarData.map(({ link, name }) => (
          <li>
            <a
              href={link}
              id={link}
              aria-current={currentPage === link ? "page" : undefined}
              class={clsx(
                "relative text-black py-2 transition-all duration-300 hover:text-gray-700 hover:after:w-full",
                currentPage === link
                  ? "font-bold after:absolute after:left-0 after:bottom-0 after:h-[2px] after:w-full after:bg-black"
                  : "after:absolute after:left-0 after:bottom-0 after:h-[2px] after:w-0 after:bg-black after:transition-all after:duration-300"
              )}
            >
              {name}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>

  <!-- Mobile Navigation -->
  <div
    id="mobile-menu"
    class="absolute top-full left-0 w-full bg-white shadow-md opacity-0 translate-y-[-10px] scale-95 transition-all duration-300 ease-in-out overflow-hidden lg:hidden pointer-events-none"
  >
    <ul class="flex flex-col items-center py-4 space-y-4">
      {
        navbarData.map(({ link, name }) => (
          <li class="w-full text-center">
            <a
              href={link}
              class={clsx(
                "text-black active:scale-95 transition transform duration-150 block py-2 text-lg",
                currentPage === link && "font-bold underline"
              )}
              id={`m-${link}`}
            >
              {name}
            </a>
          </li>
        ))
      }
    </ul>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const hamburgerButton = document.getElementById("hamburger-button");
      const closeButton = document.getElementById("close-button");
      const mobileMenu = document.getElementById("mobile-menu");

      if (!hamburgerButton || !mobileMenu || !closeButton) {
        throw new Error("Mobile Navbar elements not found");
      }

      const openMenu = () => {
        mobileMenu.classList.remove(
          "opacity-0",
          "translate-y-[-10px]",
          "scale-95",
          "pointer-events-none"
        );
        mobileMenu.classList.add("opacity-100", "translate-y-0", "scale-100");
        hamburgerButton.classList.add("hidden");
        closeButton.classList.remove("hidden");
        hamburgerButton.setAttribute("aria-expanded", "true");
      };

      const closeMenu = () => {
        mobileMenu.classList.add(
          "opacity-0",
          "translate-y-[-10px]",
          "scale-95",
          "pointer-events-none"
        );
        mobileMenu.classList.remove(
          "opacity-100",
          "translate-y-0",
          "scale-100"
        );
        closeButton.classList.add("hidden");
        hamburgerButton.classList.remove("hidden");
        hamburgerButton.setAttribute("aria-expanded", "false");
      };

      hamburgerButton.addEventListener("click", openMenu);
      closeButton.addEventListener("click", closeMenu);
    });
  </script>
</header>
